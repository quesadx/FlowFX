<?xml version="1.0" encoding="UTF-8"?>
  <project xmlns="http://maven.apache.org/POM/4.0.0"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>cr.ac.una</groupId>
    <artifactId>FlowFX</artifactId>
    <version>1.0</version>

    <properties>
      <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
      <maven.compiler.source>21</maven.compiler.source>
      <maven.compiler.target>21</maven.compiler.target>
      <javafx.version>23.0.2</javafx.version>
      <materialfx.version>11.16.1</materialfx.version>
    </properties>

    <dependencies>
      <!-- Jakarta JSON-P API + implementación (Parsson) -->
      <dependency>
        <groupId>jakarta.json</groupId>
        <artifactId>jakarta.json-api</artifactId>
        <version>2.1.3</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.parsson</groupId>
        <artifactId>parsson</artifactId>
        <version>1.1.6</version>
      </dependency>

      <!-- JavaFX -->
      <dependency>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-controls</artifactId>
        <version>${javafx.version}</version>
      </dependency>
      <dependency>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-fxml</artifactId>
        <version>${javafx.version}</version>
      </dependency>
      <dependency>
        <groupId>org.openjfx</groupId>
        <artifactId>javafx-media</artifactId>
        <version>${javafx.version}</version>
      </dependency>

      <!-- MaterialFX -->
      <dependency>
        <groupId>io.github.palexdev</groupId>
        <artifactId>materialfx</artifactId>
        <version>${materialfx.version}</version>
      </dependency>

      <!-- Oracle JDBC -->
      <dependency>
        <groupId>com.oracle.database.jdbc</groupId>
        <artifactId>ojdbc11</artifactId>
        <version>23.2.0.0</version>
      </dependency>

      <!-- JPA/Eclipselink -->
      <dependency>
        <groupId>org.eclipse.persistence</groupId>
        <artifactId>eclipselink</artifactId>
        <version>4.0.2</version>
      </dependency>
      <dependency>
        <groupId>jakarta.persistence</groupId>
        <artifactId>jakarta.persistence-api</artifactId>
        <version>3.1.0</version>
      </dependency>

      <!-- Jakarta XML WS (API + runtime Metro 4.x compatible con JDK 21) -->
      <dependency>
        <groupId>jakarta.xml.ws</groupId>
        <artifactId>jakarta.xml.ws-api</artifactId>
        <version>4.0.0</version>
      </dependency>
      <dependency>
        <groupId>com.sun.xml.ws</groupId>
        <artifactId>jaxws-rt</artifactId>
        <version>4.0.2</version>
      </dependency>

      <!-- JAXB (opcional; jaxws-rt trae lo necesario, pero los dejamos explícitos) -->
      <dependency>
        <groupId>jakarta.xml.bind</groupId>
        <artifactId>jakarta.xml.bind-api</artifactId>
        <version>4.0.0</version>
      </dependency>
      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-core</artifactId>
        <version>4.0.3</version>
      </dependency>
      <dependency>
        <groupId>com.sun.xml.bind</groupId>
        <artifactId>jaxb-impl</artifactId>
        <version>4.0.3</version>
        <scope>runtime</scope>
      </dependency>

      <!-- IMPORTANTE: Se eliminan dependencias problemáticas/inexistentes:
           - cr.ac.una.flowfx:flowfx-ws:1.0.0 (no existe en ningún repo)
           - org.glassfish.metro:webservices-rt:2.3 (javax.*, rompe en JDK 9+)
           - org.glassfish:jakarta.json (sustituido por Parsson)
      -->
    </dependencies>

    <build>
      <resources>
        <resource>
          <directory>src/main/resources</directory>
        </resource>
        <!-- Si usas catálogo/WSDL local, empaqueta estos recursos -->
        <resource>
          <targetPath>META-INF</targetPath>
          <directory>src</directory>
          <includes>
            <include>jax-ws-catalog.xml</include>
            <include>wsdl/**</include>
          </includes>
        </resource>
      </resources>

      <plugins>
        <!-- Compiler -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.11.0</version>
          <configuration>
            <release>21</release>
          </configuration>
        </plugin>

        <!-- JavaFX -->
        <plugin>
          <groupId>org.openjfx</groupId>
          <artifactId>javafx-maven-plugin</artifactId>
          <version>0.0.8</version>
          <configuration>
            <mainClass>cr.ac.una.flowfx.App</mainClass>
          </configuration>
        </plugin>

        <!-- Empaquetado con shade -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.5.2</version>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>shade</goal>
              </goals>
              <configuration>
                <transformers>
                  <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                    <mainClass>cr.ac.una.flowfx.AppLauncher</mainClass>
                  </transformer>
                </transformers>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- Generación de cliente WS (Jakarta/Metro 4.x) -->
        <plugin>
          <groupId>com.sun.xml.ws</groupId>
          <artifactId>jaxws-maven-plugin</artifactId>
          <version>4.0.2</version>
          <executions>
            <execution>
              <id>generate-ws-stubs</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>wsimport</goal>
              </goals>
              <configuration>
                <!-- Usa el catálogo para mapear URL -> WSDL local si el server no está arriba -->
                <catalog>${basedir}/src/jax-ws-catalog.xml</catalog>

                <!-- Opción 1: WSDL remoto en tiempo de build -->
                <wsdlUrls>
                  <wsdlUrl>http://localhost:8080/FlowFXWS/FlowFXWS?wsdl</wsdlUrl>
                </wsdlUrls>

                <!-- Opción 2 (recomendada como respaldo): coloca tu WSDL en src/wsdl y usa el catálogo -->
                <!-- Ejemplo de catálogo (src/jax-ws-catalog.xml):
                  <catalog xmlns="urn:oasis:names:tc:entity:xmlns:xml:catalog" prefer="public">
                    <uri name="http://localhost:8080/FlowFXWS/FlowFXWS?wsdl" uri="wsdl/FlowFXWS.wsdl"/>
                  </catalog>
                -->

                <packageName>cr.ac.una.flowfx.ws</packageName>
                <sourceDestDir>${project.build.directory}/generated-sources/jaxws</sourceDestDir>
                <xnocompile>true</xnocompile>
                <vmArgs>
                  <vmArg>-Djavax.xml.accessExternalSchema=all</vmArg>
                </vmArgs>
                <verbose>true</verbose>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <!-- Añade la carpeta de fuentes generadas al classpath del build/IDE -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>3.5.0</version>
          <executions>
            <execution>
              <id>add-jaxws-sources</id>
              <phase>generate-sources</phase>
              <goals>
                <goal>add-source</goal>
              </goals>
              <configuration>
                <sources>
                  <source>${project.build.directory}/generated-sources/jaxws</source>
                </sources>
              </configuration>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </build>
  </project>